// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: model/room.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pb {

  /// <summary>Holder for reflection information generated from model/room.proto</summary>
  public static partial class RoomReflection {

    #region Descriptor
    /// <summary>File descriptor for model/room.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RoomReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBtb2RlbC9yb29tLnByb3RvEgJwYholZ2l0aHViLmNvbS8xNW1nYS9raXdp",
            "X3Rvb2wva2l3aS5wcm90bxoRbW9kZWwvc2NlbmUucHJvdG8iiQMKBFJvb20S",
            "CgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRIcCgRtb2RlGAMgASgOMg4ucGIu",
            "RVNjZW5lTW9kZRISCgpzY2VuZVRwbElkGAQgASgFEhAKCHBhc3N3b3JkGAUg",
            "ASgJEg8KB293bmVySWQYBiABKAkSHgoGc3RhdHVzGAcgASgOMg4ucGIuUm9v",
            "bVN0YXR1cxISCgptYXhQbGF5ZXJzGAggASgFEhMKC2N1cnJQbGF5ZXJzGAkg",
            "ASgFEhIKCmNyZWF0ZVRpbWUYCiABKAMSJgoHcGxheWVycxgLIAMoCzIVLnBi",
            "LlJvb20uUGxheWVyc0VudHJ5Gj4KDFBsYXllcnNFbnRyeRILCgNrZXkYASAB",
            "KAkSHQoFdmFsdWUYAiABKAsyDi5wYi5Sb29tUGxheWVyOgI4ATpN+ONJAYLk",
            "SQwKCAoEbmFtZRADEAGC5Ek1CgYKBG5hbWUKBgoEbW9kZQoOCgxzY2VuZV90",
            "cGxfaWQKCQoHcHJpdmF0ZQoICgZzdGF0dXMiTgoKUm9vbVBsYXllchINCgVy",
            "ZWFkeRgBIAEoCBISCgpkaXNjb25uZWN0GAIgASgIEg8KB2VudGVyVHMYAyAB",
            "KAMSDAoEc2VhdBgEIAEoBSovCgpSb29tU3RhdHVzEgcKA05pbBAAEgsKB0lu",
            "TG9iYnkQARILCgdJblNjZW5lEAJCFFoDL3BiqgICUGLK3UkGEgRyb29tYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Kiwi.KiwiReflection.Descriptor, global::Pb.SceneReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Pb.RoomStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.Room), global::Pb.Room.Parser, new[]{ "Id", "Name", "Mode", "SceneTplId", "Password", "OwnerId", "Status", "MaxPlayers", "CurrPlayers", "CreateTime", "Players" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.RoomPlayer), global::Pb.RoomPlayer.Parser, new[]{ "Ready", "Disconnect", "EnterTs", "Seat" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RoomStatus {
    [pbr::OriginalName("Nil")] Nil = 0,
    [pbr::OriginalName("InLobby")] InLobby = 1,
    [pbr::OriginalName("InScene")] InScene = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Room : pb::IMessage<Room>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Room> _parser = new pb::MessageParser<Room>(() => new Room());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Room> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.RoomReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Room() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Room(Room other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      mode_ = other.mode_;
      sceneTplId_ = other.sceneTplId_;
      password_ = other.password_;
      ownerId_ = other.ownerId_;
      status_ = other.status_;
      maxPlayers_ = other.maxPlayers_;
      currPlayers_ = other.currPlayers_;
      createTime_ = other.createTime_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Room Clone() {
      return new Room(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 3;
    private global::Pb.ESceneMode mode_ = global::Pb.ESceneMode.Pve;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Pb.ESceneMode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "sceneTplId" field.</summary>
    public const int SceneTplIdFieldNumber = 4;
    private int sceneTplId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SceneTplId {
      get { return sceneTplId_; }
      set {
        sceneTplId_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 5;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerId" field.</summary>
    public const int OwnerIdFieldNumber = 6;
    private string ownerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 7;
    private global::Pb.RoomStatus status_ = global::Pb.RoomStatus.Nil;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Pb.RoomStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "maxPlayers" field.</summary>
    public const int MaxPlayersFieldNumber = 8;
    private int maxPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxPlayers {
      get { return maxPlayers_; }
      set {
        maxPlayers_ = value;
      }
    }

    /// <summary>Field number for the "currPlayers" field.</summary>
    public const int CurrPlayersFieldNumber = 9;
    private int currPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrPlayers {
      get { return currPlayers_; }
      set {
        currPlayers_ = value;
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 10;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 11;
    private static readonly pbc::MapField<string, global::Pb.RoomPlayer>.Codec _map_players_codec
        = new pbc::MapField<string, global::Pb.RoomPlayer>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Pb.RoomPlayer.Parser), 90);
    private readonly pbc::MapField<string, global::Pb.RoomPlayer> players_ = new pbc::MapField<string, global::Pb.RoomPlayer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Pb.RoomPlayer> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Room);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Room other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Mode != other.Mode) return false;
      if (SceneTplId != other.SceneTplId) return false;
      if (Password != other.Password) return false;
      if (OwnerId != other.OwnerId) return false;
      if (Status != other.Status) return false;
      if (MaxPlayers != other.MaxPlayers) return false;
      if (CurrPlayers != other.CurrPlayers) return false;
      if (CreateTime != other.CreateTime) return false;
      if (!Players.Equals(other.Players)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Mode != global::Pb.ESceneMode.Pve) hash ^= Mode.GetHashCode();
      if (SceneTplId != 0) hash ^= SceneTplId.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (Status != global::Pb.RoomStatus.Nil) hash ^= Status.GetHashCode();
      if (MaxPlayers != 0) hash ^= MaxPlayers.GetHashCode();
      if (CurrPlayers != 0) hash ^= CurrPlayers.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      hash ^= Players.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Mode != global::Pb.ESceneMode.Pve) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Mode);
      }
      if (SceneTplId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SceneTplId);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OwnerId);
      }
      if (Status != global::Pb.RoomStatus.Nil) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Status);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxPlayers);
      }
      if (CurrPlayers != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CurrPlayers);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(CreateTime);
      }
      players_.WriteTo(output, _map_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Mode != global::Pb.ESceneMode.Pve) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Mode);
      }
      if (SceneTplId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SceneTplId);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OwnerId);
      }
      if (Status != global::Pb.RoomStatus.Nil) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Status);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxPlayers);
      }
      if (CurrPlayers != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CurrPlayers);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(CreateTime);
      }
      players_.WriteTo(ref output, _map_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Mode != global::Pb.ESceneMode.Pve) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (SceneTplId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SceneTplId);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (Status != global::Pb.RoomStatus.Nil) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (MaxPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayers);
      }
      if (CurrPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrPlayers);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      size += players_.CalculateSize(_map_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Room other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Mode != global::Pb.ESceneMode.Pve) {
        Mode = other.Mode;
      }
      if (other.SceneTplId != 0) {
        SceneTplId = other.SceneTplId;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.Status != global::Pb.RoomStatus.Nil) {
        Status = other.Status;
      }
      if (other.MaxPlayers != 0) {
        MaxPlayers = other.MaxPlayers;
      }
      if (other.CurrPlayers != 0) {
        CurrPlayers = other.CurrPlayers;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Mode = (global::Pb.ESceneMode) input.ReadEnum();
            break;
          }
          case 32: {
            SceneTplId = input.ReadInt32();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
          case 50: {
            OwnerId = input.ReadString();
            break;
          }
          case 56: {
            Status = (global::Pb.RoomStatus) input.ReadEnum();
            break;
          }
          case 64: {
            MaxPlayers = input.ReadInt32();
            break;
          }
          case 72: {
            CurrPlayers = input.ReadInt32();
            break;
          }
          case 80: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 90: {
            players_.AddEntriesFrom(input, _map_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Mode = (global::Pb.ESceneMode) input.ReadEnum();
            break;
          }
          case 32: {
            SceneTplId = input.ReadInt32();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
          case 50: {
            OwnerId = input.ReadString();
            break;
          }
          case 56: {
            Status = (global::Pb.RoomStatus) input.ReadEnum();
            break;
          }
          case 64: {
            MaxPlayers = input.ReadInt32();
            break;
          }
          case 72: {
            CurrPlayers = input.ReadInt32();
            break;
          }
          case 80: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 90: {
            players_.AddEntriesFrom(ref input, _map_players_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoomPlayer : pb::IMessage<RoomPlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomPlayer> _parser = new pb::MessageParser<RoomPlayer>(() => new RoomPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoomPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.RoomReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomPlayer(RoomPlayer other) : this() {
      ready_ = other.ready_;
      disconnect_ = other.disconnect_;
      enterTs_ = other.enterTs_;
      seat_ = other.seat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomPlayer Clone() {
      return new RoomPlayer(this);
    }

    /// <summary>Field number for the "ready" field.</summary>
    public const int ReadyFieldNumber = 1;
    private bool ready_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Ready {
      get { return ready_; }
      set {
        ready_ = value;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 2;
    private bool disconnect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Disconnect {
      get { return disconnect_; }
      set {
        disconnect_ = value;
      }
    }

    /// <summary>Field number for the "enterTs" field.</summary>
    public const int EnterTsFieldNumber = 3;
    private long enterTs_;
    /// <summary>
    ///进入的时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EnterTs {
      get { return enterTs_; }
      set {
        enterTs_ = value;
      }
    }

    /// <summary>Field number for the "seat" field.</summary>
    public const int SeatFieldNumber = 4;
    private int seat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seat {
      get { return seat_; }
      set {
        seat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoomPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoomPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ready != other.Ready) return false;
      if (Disconnect != other.Disconnect) return false;
      if (EnterTs != other.EnterTs) return false;
      if (Seat != other.Seat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ready != false) hash ^= Ready.GetHashCode();
      if (Disconnect != false) hash ^= Disconnect.GetHashCode();
      if (EnterTs != 0L) hash ^= EnterTs.GetHashCode();
      if (Seat != 0) hash ^= Seat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ready != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ready);
      }
      if (Disconnect != false) {
        output.WriteRawTag(16);
        output.WriteBool(Disconnect);
      }
      if (EnterTs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EnterTs);
      }
      if (Seat != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Seat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ready != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ready);
      }
      if (Disconnect != false) {
        output.WriteRawTag(16);
        output.WriteBool(Disconnect);
      }
      if (EnterTs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EnterTs);
      }
      if (Seat != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Seat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ready != false) {
        size += 1 + 1;
      }
      if (Disconnect != false) {
        size += 1 + 1;
      }
      if (EnterTs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnterTs);
      }
      if (Seat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoomPlayer other) {
      if (other == null) {
        return;
      }
      if (other.Ready != false) {
        Ready = other.Ready;
      }
      if (other.Disconnect != false) {
        Disconnect = other.Disconnect;
      }
      if (other.EnterTs != 0L) {
        EnterTs = other.EnterTs;
      }
      if (other.Seat != 0) {
        Seat = other.Seat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ready = input.ReadBool();
            break;
          }
          case 16: {
            Disconnect = input.ReadBool();
            break;
          }
          case 24: {
            EnterTs = input.ReadInt64();
            break;
          }
          case 32: {
            Seat = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ready = input.ReadBool();
            break;
          }
          case 16: {
            Disconnect = input.ReadBool();
            break;
          }
          case 24: {
            EnterTs = input.ReadInt64();
            break;
          }
          case 32: {
            Seat = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
